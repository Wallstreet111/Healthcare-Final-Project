data <- read.csv('C:/Data/CVD_cleaned.csv')
# Convert relevant columns to factors and ensure binary outcome for Heart Disease
data$Smoking_History <- as.factor(data$Smoking_History)
data$Heart_Disease <- as.factor(ifelse(data$Heart_Disease == "Yes", 1, 0))
# Logistic Regression Model for Smoking vs. Heart Disease
smoking_model <- glm(Heart_Disease ~ Smoking_History, data = data, family = binomial)
# Display the formula of the model
formula(smoking_model)
# Create a tidy coefficient table
coef_table <- tidy(smoking_model)
coef_table
# Generate predicted probabilities
new_data <- data.frame(Smoking_History = factor(c("No", "Yes"), levels = levels(data$Smoking_History)))
new_data$Predicted_Probability <- predict(smoking_model, newdata = new_data, type = "response")
# Plot
ggplot(new_data, aes(x = Smoking_History, y = Predicted_Probability, fill = Smoking_History)) +
geom_bar(stat = "identity", show.legend = FALSE) +
geom_text(aes(label = scales::percent(Predicted_Probability)), vjust = -0.5) +
labs(
title = "Predicted Probability of Heart Disease by Smoking History",
x = "Smoking History",
y = "Predicted Probability",
subtitle = "The risk of heart disease is higher among smokers."
) +
scale_y_continuous(labels = scales::percent) +
theme_minimal()
#| label: setup
#| message: FALSE
# Load necessary libraries
if (!requireNamespace("gtsummary", quietly = TRUE)) install.packages("gtsummary")
if (!requireNamespace("broom", quietly = TRUE)) install.packages("broom")
library(tidyverse)
library(gtsummary)
library(broom)
# Read the data
data <- read.csv('C:/Data/CVD_cleaned.csv')
# Convert relevant columns to factors and ensure binary outcome for Heart Disease
data$Smoking_History <- as.factor(data$Smoking_History)
data$Heart_Disease <- as.factor(ifelse(data$Heart_Disease == "Yes", 1, 0))
# Logistic Regression Model for Smoking vs. Heart Disease
smoking_model <- glm(Heart_Disease ~ Smoking_History, data = data, family = binomial)
cat("$$\n\\log\\left(\\frac{p}{1 - p}\\right) = \\beta_0 + \\beta_1 \\cdot \\text{Smoking History} + \\epsilon\n$$")
# Create a tidy coefficient table
coef_table <- tidy(smoking_model)
coef_table
# Generate data for plotting
plot_data <- data.frame(
Smoking_History = levels(data$Smoking_History),
Predicted_Probability = predict(smoking_model, newdata = data.frame(Smoking_History = levels(data$Smoking_History)), type = "response")
)
# Plot
ggplot(plot_data, aes(x = Smoking_History, y = Predicted_Probability)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(
title = "Predicted Probability of Heart Disease by Smoking History",
x = "Smoking History",
y = "Predicted Probability",
subtitle = "The risk of heart disease varies with smoking history."
) +
scale_y_continuous(labels = scales::percent) +
theme_minimal()
#| label: setup
#| message: FALSE
# Load necessary libraries
if (!requireNamespace("gtsummary", quietly = TRUE)) install.packages("gtsummary")
if (!requireNamespace("broom", quietly = TRUE)) install.packages("broom")
if (!requireNamespace("brms", quietly = TRUE)) install.packages("brms")
if (!requireNamespace("ggthemes", quietly = TRUE)) install.packages("ggthemes")
library(tidyverse)
library(gtsummary)
library(broom)
library(brms)
library(ggthemes)
# Read the data
data <- read.csv('C:/Data/CVD_cleaned.csv')
# Convert relevant columns to factors and ensure binary outcome for Heart Disease
data$Smoking_History <- as.factor(data$Smoking_History)
data$Heart_Disease <- as.factor(ifelse(data$Heart_Disease == "Yes", 1, 0))
# Logistic Regression Model for Smoking vs. Heart Disease
smoking_model <- glm(Heart_Disease ~ Smoking_History, data = data, family = binomial)
cat("$$\n\\log\\left(\\frac{p}{1 - p}\\right) = \\beta_0 + \\beta_1 \\cdot \\text{Smoking History} + \\epsilon\n$$")
# Create a tidy coefficient table
coef_table <- tidy(smoking_model)
coef_table
# Generate data for plotting
plot_data <- data.frame(
Smoking_History = levels(data$Smoking_History),
Predicted_Probability = predict(smoking_model, newdata = data.frame(Smoking_History = levels(data$Smoking_History)), type = "response")
)
# Add posterior predictions using brms for more advanced visualization
fit_smoke <- brm(
formula = Heart_Disease ~ Smoking_History,
data = data,
family = bernoulli(),
refresh = 0,
silent = 2,
seed = 9
)
#| label: setup
#| message: FALSE
# Load necessary libraries
if (!requireNamespace("gtsummary", quietly = TRUE)) install.packages("gtsummary")
if (!requireNamespace("broom", quietly = TRUE)) install.packages("broom")
if (!requireNamespace("brms", quietly = TRUE)) install.packages("brms")
if (!requireNamespace("ggthemes", quietly = TRUE)) install.packages("ggthemes")
library(tidyverse)
library(gtsummary)
library(broom)
library(brms)
library(ggthemes)
# Read the data
data <- read.csv('C:/Data/CVD_cleaned.csv')
# Convert relevant columns to factors and ensure binary outcome for Heart Disease
data$Smoking_History <- as.factor(data$Smoking_History)
data$Heart_Disease <- as.factor(ifelse(data$Heart_Disease == "Yes", 1, 0))
# Logistic Regression Model for Smoking vs. Heart Disease
smoking_model <- glm(Heart_Disease ~ Smoking_History, data = data, family = binomial)
cat("$$\n\\log\\left(\\frac{p}{1 - p}\\right) = \\beta_0 + \\beta_1 \\cdot \\text{Smoking History} + \\epsilon\n$$")
# Create a tidy coefficient table
coef_table <- tidy(smoking_model)
coef_table
# Generate data for plotting
plot_data <- data.frame(
Smoking_History = levels(data$Smoking_History),
Predicted_Probability = predict(smoking_model, newdata = data.frame(Smoking_History = levels(data$Smoking_History)), type = "response")
)
# Add posterior predictions using brms for more advanced visualization
fit_smoke <- brm(
formula = Heart_Disease ~ Smoking_History,
data = data,
family = bernoulli(),
refresh = 0,
silent = 2,
seed = 9
)
#| label: setup
#| message: FALSE
# Load necessary libraries
if (!requireNamespace("gtsummary", quietly = TRUE)) install.packages("gtsummary")
if (!requireNamespace("broom", quietly = TRUE)) install.packages("broom")
if (!requireNamespace("brms", quietly = TRUE)) install.packages("brms")
if (!requireNamespace("ggthemes", quietly = TRUE)) install.packages("ggthemes")
library(tidyverse)
library(gtsummary)
library(broom)
library(brms)
library(ggthemes)
# Read the data
data <- read.csv('C:/Data/CVD_cleaned.csv')
# Convert relevant columns to factors and ensure binary outcome for Heart Disease
data$Smoking_History <- as.factor(data$Smoking_History)
data$Heart_Disease <- as.factor(ifelse(data$Heart_Disease == "Yes", 1, 0))
# Logistic Regression Model for Smoking vs. Heart Disease
smoking_model <- glm(Heart_Disease ~ Smoking_History, data = data, family = binomial)
cat("$$\n\\log\\left(\\frac{p}{1 - p}\\right) = \\beta_0 + \\beta_1 \\cdot \\text{Smoking History} + \\epsilon\n$$")
# Create a tidy coefficient table
coef_table <- tidy(smoking_model)
coef_table
# Generate data for plotting
plot_data <- data.frame(
Smoking_History = levels(data$Smoking_History),
Predicted_Probability = predict(smoking_model, newdata = data.frame(Smoking_History = levels(data$Smoking_History)), type = "response")
)
# Add posterior predictions using brms for more advanced visualization
fit_smoke <- brm(
formula = Heart_Disease ~ Smoking_History,
data = data,
family = bernoulli(),
refresh = 0,
silent = 2,
seed = 9
)
#| label: setup
#| message: FALSE
# Load necessary libraries
if (!requireNamespace("gtsummary", quietly = TRUE)) install.packages("gtsummary")
if (!requireNamespace("broom", quietly = TRUE)) install.packages("broom")
if (!requireNamespace("brms", quietly = TRUE)) install.packages("brms")
if (!requireNamespace("ggthemes", quietly = TRUE)) install.packages("ggthemes")
library(tidyverse)
library(gtsummary)
library(broom)
library(brms)
library(ggthemes)
# Read the data
data <- read.csv('C:/Data/CVD_cleaned.csv')
# Convert relevant columns to factors and ensure binary outcome for Heart Disease
data$Smoking_History <- as.factor(data$Smoking_History)
data$Heart_Disease <- as.factor(ifelse(data$Heart_Disease == "Yes", 1, 0))
# Logistic Regression Model for Smoking vs. Heart Disease
smoking_model <- glm(Heart_Disease ~ Smoking_History, data = data, family = binomial)
cat("$$\n\\log\\left(\\frac{p}{1 - p}\\right) = \\beta_0 + \\beta_1 \\cdot \\text{Smoking History} + \\epsilon\n$$")
# Create a tidy coefficient table
coef_table <- tidy(smoking_model)
coef_table
# Generate data for plotting
plot_data <- data.frame(
Smoking_History = levels(data$Smoking_History),
Predicted_Probability = predict(smoking_model, newdata = data.frame(Smoking_History = levels(data$Smoking_History)), type = "response")
)
# Add posterior predictions using brms for more advanced visualization
fit_smoke <- brm(
formula = Heart_Disease ~ Smoking_History,
data = data,
family = bernoulli(),
refresh = 0,
silent = 2,
seed = 9
)
# Load necessary libraries
library(ggplot2)
library(dplyr)
# Logistic Regression Model for Smoking vs. Heart Disease
smoking_model <- glm(Heart_Disease ~ Smoking_History + Age + BMI, data = data, family = binomial)
#| label: setup
#| message: FALSE
# Load necessary libraries
if (!requireNamespace("gtsummary", quietly = TRUE)) install.packages("gtsummary")
if (!requireNamespace("broom", quietly = TRUE)) install.packages("broom")
if (!requireNamespace("brms", quietly = TRUE)) install.packages("brms")
if (!requireNamespace("ggthemes", quietly = TRUE)) install.packages("ggthemes")
library(tidyverse)
library(gtsummary)
library(broom)
library(brms)
library(ggthemes)
# Read the data
data <- read.csv('C:/Data/CVD_cleaned.csv')
# Convert relevant columns to factors and ensure binary outcome for Heart Disease
data$Smoking_History <- as.factor(data$Smoking_History)
data$Heart_Disease <- as.factor(ifelse(data$Heart_Disease == "Yes", 1, 0))
# Logistic Regression Model for Smoking vs. Heart Disease
smoking_model <- glm(Heart_Disease ~ Smoking_History, data = data, family = binomial)
cat("$$\n\\log\\left(\\frac{p}{1 - p}\\right) = \\beta_0 + \\beta_1 \\cdot \\text{Smoking History} + \\epsilon\n$$")
# Create a tidy coefficient table
coef_table <- tidy(smoking_model)
coef_table
# Generate data for plotting
plot_data <- data.frame(
Smoking_History = levels(data$Smoking_History),
Predicted_Probability = predict(smoking_model, newdata = data.frame(Smoking_History = levels(data$Smoking_History)), type = "response")
)
# Add posterior predictions using brms for more advanced visualization
fit_smoke <- brm(
formula = Heart_Disease ~ Smoking_History,
data = data,
family = bernoulli(),
refresh = 0,
silent = 2,
seed = 9
)
# Load necessary libraries
library(brms)
library(tidyverse)
library(ggthemes)
library(broom)
# Read the data
data <- read_csv("data/heart-disease.csv")
# Load necessary libraries
library(brms)
library(tidyverse)
library(ggthemes)
library(broom)
# Read the data
data <- read_csv('C:/Data/CVD_cleaned.csv')
# Ensure the gender variable is correctly formatted
data <- data %>%
mutate(gender = recode(gender, `1` = "Male", `2` = "Female"))
#| label: Setup
library(tidyverse)
library(brms)
library(ggthemes)
# Load the data
data <- read_csv('C:/Data/CVD_cleaned.csv')
# Convert 'Sex' to a factor
data <- data %>%
mutate(Sex = factor(Sex, levels = c("Male", "Female")))
# Fit a logistic regression model
fit_model <- brm(
formula = heart_disease ~ Sex,
data = data,
family = bernoulli(),
refresh = 0,
silent = 2,
seed = 9
)
#| label: Setup
library(tidyverse)
library(brms)
library(ggthemes)
# Load the data
data <- read_csv('C:/Data/CVD_cleaned.csv')
# Convert 'Sex' to a factor
data <- data %>%
mutate(Sex = factor(Sex, levels = c("Male", "Female")))
# Fit a logistic regression model
fit_model <- brm(
formula = heart_disease ~ Sex,
data = data,
family = bernoulli(),
refresh = 0,
silent = 2,
seed = 9
)
library(tidyverse)
library(brms)
library(ggthemes)
# Load and preprocess data
data <- read_csv('C:/Data/CVD_cleaned.csv') %>%
mutate(Sex = recode(Sex, `Male` = "Male", `Female` = "Female"),
Heart_Disease = as.factor(Heart_Disease))  # Ensure Heart_Disease is a factor
# Fit the logistic regression model
fit_model <- brm(
formula = Heart_Disease ~ Sex,
data = data,
family = bernoulli(),
refresh = 0,
silent = 2,
seed = 9
)
library(tidyverse)
library(brms)
library(ggthemes)
library(gtsummary)
# Load and preprocess data
data <- read_csv('C:/Data/CVD_cleaned.csv') %>%
rename(
Heart_Disease = `Heart_Disease`,
Sex = `Sex`
) %>%
mutate(Sex = recode(Sex, `Male` = "Male", `Female` = "Female"))
# Fit Bayesian model for heart disease risk by gender
fit_model <- brm(
formula = Heart_Disease ~ Sex,
data = data,
family = bernoulli(),
iter = 1000,  # Reduce number of iterations
chains = 2,   # Reduce number of chains
refresh = 0,
silent = 2,
seed = 9
)
library(tidyverse)
library(brms)
library(ggthemes)
library(gtsummary)
# Load and preprocess data
data <- read_csv('C:/Data/CVD_cleaned.csv') %>%
rename(
Heart_Disease = `Heart_Disease`,
Sex = `Sex`
) %>%
mutate(Sex = recode(Sex, `Male` = "Male", `Female` = "Female"))
# Fit Bayesian model for heart disease risk by gender
fit_model <- brm(
formula = Heart_Disease ~ Sex,
data = data,
family = bernoulli(),
iter = 1000,  # Reduce number of iterations
chains = 2,   # Reduce number of chains
refresh = 0,
silent = 2,
seed = 9
)
#| label: setup
#| message: FALSE
# Load necessary libraries
if (!requireNamespace("gtsummary", quietly = TRUE)) install.packages("gtsummary")
if (!requireNamespace("broom", quietly = TRUE)) install.packages("broom")
if (!requireNamespace("brms", quietly = TRUE)) install.packages("brms")
if (!requireNamespace("ggthemes", quietly = TRUE)) install.packages("ggthemes")
library(tidyverse)
library(gtsummary)
library(broom)
library(brms)
library(ggthemes)
library(tidyverse)
library(brms)
library(bayesplot)
library(broom.mixed)  # For tidying mixed model results
# Load data
data <- read_csv('C:/Data/CVD_cleaned.csv') %>%
mutate(
Sex = recode(Sex, `Male` = "Male", `Female` = "Female"),
Heart_Disease = as.integer(Heart_Disease),  # Ensure Heart_Disease is a numeric binary variable
Smoking_History = as.factor(Smoking_History)  # Ensure Smoking_History is treated as a factor
)
# Fit Bayesian logistic regression model
fit_model <- brm(
formula = Heart_Disease ~ Smoking_History,
data = data,
family = bernoulli(),
iter = 1000,  # Number of iterations for sampling
chains = 2,   # Number of chains for sampling
refresh = 0,
silent = 2,
seed = 9
)
#| label: setup
#| message: FALSE
# Load necessary libraries
if (!requireNamespace("gtsummary", quietly = TRUE)) install.packages("gtsummary")
if (!requireNamespace("broom", quietly = TRUE)) install.packages("broom")
if (!requireNamespace("brms", quietly = TRUE)) install.packages("brms")
if (!requireNamespace("ggthemes", quietly = TRUE)) install.packages("ggthemes")
library(tidyverse)
library(gtsummary)
library(broom)
library(brms)
library(ggthemes)
library(bayesplot)
library(broom.mixed)  # For tidying mixed model results
library(tidyverse)
library(brms)
library(broom.mixed)  # For tidying mixed model results
# Load and prepare data
data <- read_csv('C:/Data/CVD_cleaned.csv') %>%
mutate(
Sex = recode(Sex, `Male` = "Male", `Female` = "Female"),
Heart_Disease = as.integer(Heart_Disease),  # Ensure Heart_Disease is a numeric binary variable
Smoking_History = as.factor(Smoking_History)  # Ensure Smoking_History is treated as a factor
) %>%
drop_na(Heart_Disease, Smoking_History)  # Remove rows with missing values in relevant columns
# Check if data is empty after NA removal
if(nrow(data) == 0) {
stop("Data is empty after removing missing values.")
}
#| label: setup
#| message: FALSE
library(tidyverse)
library(brms)
library(broom.mixed)  # For tidying mixed model results
# Load and prepare data
data <- read_csv('C:/Data/CVD_cleaned.csv')
# Check initial data
summary(data)
colSums(is.na(data))
head(data)
str(data)
# Prepare data: ensure correct types and handle missing values
data <- data %>%
mutate(
Sex = recode(Sex, `Male` = "Male", `Female` = "Female"),
Heart_Disease = as.integer(Heart_Disease),  # Ensure Heart_Disease is numeric
Smoking_History = as.factor(Smoking_History)  # Ensure Smoking_History is a factor
) %>%
drop_na(Heart_Disease, Smoking_History)  # Remove rows with NA in critical columns
# Check if data is empty after cleaning
if(nrow(data) == 0) {
stop("Data is empty after removing missing values.")
}
library(tidyverse)
library(brms)
library(broom.mixed)  # For tidying mixed model results
# Load and prepare data
data <- read_csv('C:/Data/CVD_cleaned.csv')
# Check initial data
summary(data)
colSums(is.na(data))
head(data)
str(data)
# Prepare data: ensure correct types and handle missing values
data <- data %>%
mutate(
Sex = recode(Sex, `Male` = "Male", `Female` = "Female"),
Heart_Disease = as.integer(Heart_Disease),  # Ensure Heart_Disease is numeric
Smoking_History = as.factor(Smoking_History)  # Ensure Smoking_History is a factor
) %>%
drop_na(Heart_Disease, Smoking_History)  # Remove rows with NA in critical columns
# Check if data is empty after cleaning
if(nrow(data) == 0) {
stop("Data is empty after removing missing values.")
}
library(tidyverse)
library(brms)
library(broom.mixed)
# Load your data
data <- read_csv('C:/Data/CVD_cleaned.csv')
# Check the structure of your data
str(data)
library(tidyverse)
library(brms)
library(broom.mixed)
# Load your data
data <- read_csv('C:/Data/CVD_cleaned.csv')
# Check the structure of your data
str(data)
# Fit Bayesian logistic regression model for heart disease risk by smoking history
fit_smoking <- brm(
formula = Heart_Disease ~ Smoking_History,
data = data,
family = bernoulli(),
iter = 1000,  # Number of iterations for sampling
chains = 2,   # Number of chains for sampling
refresh = 0,
silent = 2,
seed = 9
)
#| label: Fit Smoking Model
#| cache: FALSE
install.packages("brms")
library(brms)
fit_smoking <- brm(
formula = Heart_Disease ~ Smoking_History,
data = data,
family = bernoulli(),
iter = 2000,  # Default number of iterations for sampling
chains = 4,   # Default number of chains for sampling
refresh = 0,
silent = 2,
seed = 9
)
